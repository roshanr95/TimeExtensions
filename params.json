{"name":"TimeExtensions","tagline":"Simple and elegant module for working with time","body":"Introduction\r\n=====================\r\n\r\nTimeExtensions is a library written in Swift whose purpose is to provide an elegant and easily understandable syntax for working with time. It is heavily inspired from ActiveSupport in Ruby on Rails.\r\n\r\n## Usage\r\n\r\n### To get time intervals\r\n\r\nYou can get `NSTimeInterval`s by adding a unit like `seconds` or `minutes` to a `Float`, `Int`, or `Double` :\r\n\r\n````swift\r\n10.minutes\r\n2.5.seconds\r\n5.days\r\n````\r\n\r\nA nice consequence of this is that you can also combine values of different units by simply adding them :\r\n\r\n````swift\r\n10.minutes + 30.seconds\r\n1.day + 4.hours\r\n````\r\n\r\n### To get dates from the time intervals\r\n\r\nYou can get `NSDate`s from `NSTimeInterval`s by making use of `ago`, `since`, `fromNow` and `until` :\r\n\r\n````swift\r\n10.minutes.ago\r\n5.days.until(someDate)\r\n````\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}